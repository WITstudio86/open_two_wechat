name   名字: 'publish'   “发布”

on:   :
  push:   推动:
    branches:   分支:
      - main
    tags:
      - v*
  pull_request:
    branches:   分支:
      - master

permissions:
  contents: write   内容:写

# This workflow will trigger on each push to the `release` branch to create or update a GitHub release, build your app, and upload the artifacts to the release.这个工作流将在每次推送到“发布”分支时触发，以创建或更新GitHub发布，构建应用程序，并将工件上传到发布。

jobs:   工作:
  publish-tauri:
    permissions:   权限:
      contents: write   内容:写
    strategy:   策略:
      fail-fast: false   快速失败:错误
      matrix:   矩阵:
        include:   包括:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).-平台:'macos-latest' #用于基于Arm的mac (M1及以上)。
            args: '--target aarch64-apple-darwin'参数:'——target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.-平台:'macos-latest' #用于基于英特尔的mac。
            args: '--target x86_64-apple-darwin'参数:'——target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.- platform: 'ubuntu-22.04' #对于Tauri v1，你可以用ubuntu-20.04替换它。
            args: ''   参数:“
          - platform: 'windows-latest'-平台:'windows-latest'
            args: ''   参数:“

    runs-on: ${{ matrix.platform }}运行:${{矩阵。平台}}
    steps:   步骤:
      - uses: actions/checkout@v4-使用:actions/checkout@v4

      - name: setup node   —name:设置节点
        uses: actions/setup-node@v4用途:行动/ setup-node@v4
        with:   :
          node-version: lts/*   节点信息:lts / *

      - name: install Rust stable—name:安装Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:   :
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

      - name: install frontend dependencies
        run: yarn install # change this to npm, pnpm or bun depending on which one you use.

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:   :
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
